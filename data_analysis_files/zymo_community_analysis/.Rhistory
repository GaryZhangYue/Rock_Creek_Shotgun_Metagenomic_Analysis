df.s = gather(df, "sample",'frequency',-strain)
df.s$strain = sub('_16S.*','',df.s$strain)
df.s = gather(df, "sample",'frequency',-strain)
df.s$strain = sub('\\_16S.*','',df.s$strain)
df.s = gather(df, "sample",'frequency',-strain)
df.s$strain = sub('_16S.*\\','',df.s$strain)
df.s$strain = sub('_16S.*','',df.s$strain)
#plot
ggplot(data = df.s, mapping = aes(x = sample, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
scale_fill_manual(values = col21)+
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))
#plot
ggplot(data = df.s, mapping = aes(x = sample, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
scale_fill_manual(values = col21)+
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))+
coord_flip()
ggsave('/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo_composition.png',
width = 6, height = 3, device = 'png')
#plot
ggplot(data = df.s, mapping = aes(x = sample, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
scale_fill_manual(values = col21)+
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) +
ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))+
coord_flip()
ggsave('/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo_composition.png',
width = 9, height = 3, device = 'png')
ggsave('/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo_composition.png',
width = 9, height = 5, device = 'png')
require(dplyr)
require(tidyr)
require(ggplot2)
#read in the salmon output
quantd = read.table('zymo-dna_quant.sf',
header = T,
sep = '\t')
quantc = read.table('zymo-cellular_quant.sf',
header = T,
sep = '\t')
summary(quantc$Name == quantd$Name) #sanity check
names(quantc)[4] = 'TPM_cellular'
names(quantd)[4] = 'TPM_DNA'
quant = merge(x = subset(quantc, select = c(Name, `TPM_cellular`)),
y = subset(quantd, select = c(Name,`TPM_DNA`)),
by = 'Name', all.x = T, all.y = T)
#read in the file that matches the name of each contig to each strain
contig = read.csv('genome_contig.csv')
#preprocess the contig names
contig$contig = sub('>','',contig$contig)
contig$contig = sub(' .*','',contig$contig)
'%nin%' = Negate('%in%')
#check why there is one contig that only appears in contig file
contig$contig[contig$contig %nin% quant$Name]
contig[which(contig$contig == contig$contig[contig$contig %nin% quant$Name]),]
#omit this row in the following analysis
#match TPM to strain using contig names
tpm = merge(x = subset(contig, select = c(strain, contig)),
y = quant,
by.x = 'contig', by.y = 'Name',
all.y = T)
tpm = tpm[,-1]
tpm = aggregate(.~strain,tpm,sum)
#input the theoretical composition for genome copy number
tpm$theoretical_percentage = NA
tpm$theoretical_percentage = c(10.3, 0.37, 14.6, 8.5, 21.6, 13.9, 6.1, 0.57, 8.7, 15.2)
sum(tpm$theoretical_percentage)
require(dplyr)
require(tidyr)
require(ggplot2)
#read in the salmon output
quantd = read.table('zymo-dna_quant.sf',
header = T,
sep = '\t')
quantc = read.table('zymo-cellular_quant.sf',
header = T,
sep = '\t')
summary(quantc$Name == quantd$Name) #sanity check
names(quantc)[4] = 'TPM_cellular'
names(quantd)[4] = 'TPM_DNA'
quant = merge(x = subset(quantc, select = c(Name, `TPM_cellular`)),
y = subset(quantd, select = c(Name,`TPM_DNA`)),
by = 'Name', all.x = T, all.y = T)
#read in the file that matches the name of each contig to each strain
contig = read.csv('genome_contig.csv')
#preprocess the contig names
contig$contig = sub('>','',contig$contig)
contig$contig = sub(' .*','',contig$contig)
'%nin%' = Negate('%in%')
#check why there is one contig that only appears in contig file
contig$contig[contig$contig %nin% quant$Name]
contig[which(contig$contig == contig$contig[contig$contig %nin% quant$Name]),]
#omit this row in the following analysis
#match TPM to strain using contig names
tpm = merge(x = subset(contig, select = c(strain, contig)),
y = quant,
by.x = 'contig', by.y = 'Name',
all.y = T)
tpm = tpm[,-1]
tpm = aggregate(.~strain,tpm,sum)
#input the theoretical composition for genome copy number
tpm$theoretical_percentage = NA
tpm$theoretical_percentage = c(10.3, 0.37, 14.6, 8.5, 21.6, 13.9, 6.1, 0.57, 8.7, 15.2)
sum(tpm$theoretical_percentage)
#remove the two weird strains
tpm = tpm[-c(2),]
tpm %>% mutate(DNA_percentage = TPM_DNA/sum(TPM_DNA),
cellular_percentage = TPM_cellular/sum(TPM_cellular),
theoretical_percentage = theoretical_percentage/sum(theoretical_percentage)) -> tpm
#stack tpm
tpm.s = gather(subset(tpm, select = c(strain,theoretical_percentage,DNA_percentage,cellular_percentage)),"type","frequency",-strain)
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'right',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
tpm.s$strain = sub('_complete.*','',tpm.s$strain)
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
#stack tpm
tpm.s = gather(subset(tpm, select = c(strain,theoretical_percentage,DNA_percentage,cellular_percentage)),"type","frequency",-strain)
tpm.s$strain = sub('.fasta.*','',tpm.s$strain)
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
scale_fill_manual(values = col21)
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
scale_fill_manual(values = col21)+
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
ggsave('zymo_quality_check.png', width = 10, height = 6, device = 'png')
require('stringr')
require("phyloseq")
require('vegan')
require("tidyr")
require('ggplot2')
require('qiime2R')
require('dplyr')
require('ANCOMBC')
require('usedist')
require('rioja')
require('ggpubr')
require('circlize')
require('ComplexHeatmap')
require('spaa')
require('ape')
require('cowplot')
require('wesanderson')
require('ggforestplot')
require('GGally')
require('scales')
require('metagMisc')
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
pr<-qza_to_phyloseq(
features="/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo/zymo_table.qza",
taxonomy="/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo/zymo_taxonomy.qza")
taxa = as.data.frame(tax_table(pr))
asv = as.data.frame(otu_table(pr))
df = merge(x = subset(taxa, select =  c(Kingdom), drop = F),
y = asv,
by = 0,
all.y = T)
df = df[,-1]
df = aggregate(.~Kingdom, df, sum)
#rename
names(df)[1] = 'strain'
#input the theoretical composition of 16s copy number
df$theoretical_percentage = c(17.4, 10.1, 18.4, 14.1, 4.2, 10.4, 15.5, 0)
df[9,] = c('Enterococcus_faecalis_16S_170923.fasta',0,0,9.9)
rownames(df) = df$strain
df = df[,-1]
dfrownames = rownames(df)
df = as.data.frame(lapply(df,as.numeric))
sum(df$theoretical_percentage)
rownames(df) = dfrownames
df = decostand(df,2,method = 'total')
colSums(df)
df$strain = rownames(df)
df.s = gather(df, "sample",'frequency',-strain)
df.s$strain = sub('_16S.*','',df.s$strain)
#plot
ggplot(data = df.s, mapping = aes(x = sample, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
scale_fill_manual(values = col21)+
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) +
ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))+
coord_flip()
ggsave('/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo_composition.png',
width = 9, height = 5, device = 'png')
require('stringr')
require("phyloseq")
require('vegan')
require("tidyr")
require('ggplot2')
require('qiime2R')
require('dplyr')
require('ANCOMBC')
require('usedist')
require('rioja')
require('ggpubr')
require('circlize')
require('ComplexHeatmap')
require('spaa')
require('ape')
require('cowplot')
require('wesanderson')
require('ggforestplot')
require('GGally')
require('scales')
require('metagMisc')
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
pr<-qza_to_phyloseq(
features="/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo/zymo_table.qza",
taxonomy="/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo/zymo_taxonomy.qza")
taxa = as.data.frame(tax_table(pr))
asv = as.data.frame(otu_table(pr))
df = merge(x = subset(taxa, select =  c(Kingdom), drop = F),
y = asv,
by = 0,
all.y = T)
df = df[,-1]
df = aggregate(.~Kingdom, df, sum)
#rename
names(df)[1] = 'strain'
#input the theoretical composition of 16s copy number
df$theoretical_percentage = c(17.4, 10.1, 18.4, 14.1, 4.2, 10.4, 15.5, 0)
df[9,] = c('Enterococcus_faecalis_16S_170923.fasta',0,0,9.9)
rownames(df) = df$strain
df = df[,-1]
dfrownames = rownames(df)
df = as.data.frame(lapply(df,as.numeric))
sum(df$theoretical_percentage)
rownames(df) = dfrownames
df = decostand(df,2,method = 'total')
colSums(df)
df$strain = rownames(df)
df.s = gather(df, "sample",'frequency',-strain)
df.s$strain = sub('_16S.*','',df.s$strain)
#plot
ggplot(data = df.s, mapping = aes(x = sample, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
scale_fill_manual(values = col21)+
theme_classic() +
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) +
ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1))+
coord_flip()
ggsave('/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo_composition.png',
width = 9, height = 5, device = 'png')
View(df.s)
View(df)
write.csv(df, '/Volumes/microbiome/rock_creek_anlysis/yue_rockcreek_16s_seq1n2_analysis/zymo_analysis/zymo.csv')
require(dplyr)
require(tidyr)
require(ggplot2)
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
#read in the salmon output
quantd = read.table('zymo-dna_quant.sf',
header = T,
sep = '\t')
quantc = read.table('zymo-cellular_quant.sf',
header = T,
sep = '\t')
summary(quantc$Name == quantd$Name) #sanity check
names(quantc)[4] = 'TPM_cellular'
names(quantd)[4] = 'TPM_DNA'
quant = merge(x = subset(quantc, select = c(Name, `TPM_cellular`)),
y = subset(quantd, select = c(Name,`TPM_DNA`)),
by = 'Name', all.x = T, all.y = T)
#read in the file that matches the name of each contig to each strain
contig = read.csv('genome_contig.csv')
#preprocess the contig names
contig$contig = sub('>','',contig$contig)
contig$contig = sub(' .*','',contig$contig)
'%nin%' = Negate('%in%')
#check why there is one contig that only appears in contig file
contig$contig[contig$contig %nin% quant$Name]
contig[which(contig$contig == contig$contig[contig$contig %nin% quant$Name]),]
#omit this row in the following analysis
#match TPM to strain using contig names
tpm = merge(x = subset(contig, select = c(strain, contig)),
y = quant,
by.x = 'contig', by.y = 'Name',
all.y = T)
tpm = tpm[,-1]
tpm = aggregate(.~strain,tpm,sum)
#input the theoretical composition for genome copy number
tpm$theoretical_percentage = NA
tpm$theoretical_percentage = c(10.3, 0.37, 14.6, 8.5, 21.6, 13.9, 6.1, 0.57, 8.7, 15.2)
sum(tpm$theoretical_percentage)
#remove the two weird strains
tpm = tpm[-c(2),]
tpm %>% mutate(DNA_percentage = TPM_DNA/sum(TPM_DNA),
cellular_percentage = TPM_cellular/sum(TPM_cellular),
theoretical_percentage = theoretical_percentage/sum(theoretical_percentage)) -> tpm
#stack tpm
tpm.s = gather(subset(tpm, select = c(strain,theoretical_percentage,DNA_percentage,cellular_percentage)),"type","frequency",-strain)
tpm.s$strain = sub('.fasta.*','',tpm.s$strain)
#plot
ggplot(data = tpm.s, mapping = aes(x = type, y = `frequency`,fill = strain)) +
geom_bar(position = 'fill', stat="identity",color = 'black') +
theme_classic() +
scale_fill_manual(values = col21)+
theme(legend.title = element_blank(),
legend.position = 'bottom',
legend.text = element_text(size = 12),
legend.key.size = unit(0.3,'cm'),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1,size=10, color = 'black'),
axis.text.y = element_text(size=15, color = 'black'),
axis.title=element_text(size=18,face="bold"),
strip.text.x = element_text(size = 15, color = "black"),
strip.text.y = element_text(size = 15, color = "black"),
strip.background = element_rect(color="black", fill="grey95", size=1.5, linetype="solid")) + ylab('Relative Abundance') +
guides(fill=guide_legend(ncol=1)) +
coord_flip()
ggsave('zymo_quality_check.png', width = 10, height = 6, device = 'png')
View(quant)
View(quantd)
View(tpm)
require(dplyr)
require(tidyr)
require(ggplot2)
col21 <- rev(c("tomato1","darkblue","turquoise1","lightblue","darkred","mediumblue","purple","bisque","greenyellow","yellow","violetred2","darkgreen","darkgoldenrod1","deeppink3","cadetblue4","orchid2","seagreen3","purple4","dodgerblue2","red","gray27"))
#read in the salmon output
quantd = read.table('zymo-dna_quant.sf',
header = T,
sep = '\t')
quantc = read.table('zymo-cellular_quant.sf',
header = T,
sep = '\t')
summary(quantc$Name == quantd$Name) #sanity check
names(quantc)[4] = 'TPM_cellular'
names(quantd)[4] = 'TPM_DNA'
quant = merge(x = subset(quantc, select = c(Name, `TPM_cellular`)),
y = subset(quantd, select = c(Name,`TPM_DNA`)),
by = 'Name', all.x = T, all.y = T)
#read in the file that matches the name of each contig to each strain
contig = read.csv('genome_contig.csv')
#preprocess the contig names
contig$contig = sub('>','',contig$contig)
contig$contig = sub(' .*','',contig$contig)
'%nin%' = Negate('%in%')
#check why there is one contig that only appears in contig file
contig$contig[contig$contig %nin% quant$Name]
contig[which(contig$contig == contig$contig[contig$contig %nin% quant$Name]),]
#omit this row in the following analysis
#match TPM to strain using contig names
tpm = merge(x = subset(contig, select = c(strain, contig)),
y = quant,
by.x = 'contig', by.y = 'Name',
all.y = T)
tpm = tpm[,-1]
tpm = aggregate(.~strain,tpm,sum)
#input the theoretical composition for genome copy number
tpm$theoretical_percentage = NA
tpm$theoretical_percentage = c(10.3, 0.37, 14.6, 8.5, 21.6, 13.9, 6.1, 0.57, 8.7, 15.2)
sum(tpm$theoretical_percentage)
View(tpm)
write.csv(tpm,'zymo.csv')
